// Indexed capitalization

/*
Given a string and an array of integers representing indices, capitalize all letters at the given indices.

For example:

capitalize("abcdef",[1,2,5]) = "aBCdeF"
capitalize("abcdef",[1,2,5,100]) = "aBCdeF". There is no index 100.
The input will be a lowercase string with no spaces and an array of digits.
*/


const capitalize = (s,arr)=> s.split('').map((x,i)=> arr.includes(i) ? x.toUpperCase() : x).join('')


// Time: 650 ms Passed: 106 Failed: 0
// Test Results:
// Basic tests
// Test Passed: Value deep equals 'aBCdeF'
// Test Passed: Value deep equals 'aBCdeF'
// Test Passed: Value deep equals 'cOdEwArs'
// Test Passed: Value deep equals 'abRacaDabRA'
// Test Passed: Value deep equals 'codewArriors'
// Test Passed: Value deep equals 'Indexinglessons'
// Completed in 4ms
// Random tests
// Test Passed: Value deep equals 'bCDEFgHIJKLMnoPQRS'
// Test Passed: Value deep equals 'BCdEFgHIjkLMNOpQRS'
// Test Passed: Value deep equals 'bCDEFGHIJKLMnoPQR'
// Test Passed: Value deep equals 'BCDefGhIJKL'
// Test Passed: Value deep equals 'BcDEFGHIjKLmNo'
// Test Passed: Value deep equals 'BcdEFGhijKLMNo'
// Test Passed: Value deep equals 'BcdEFGHIJ'
// Test Passed: Value deep equals 'BCDEFGhiJkL'
// Test Passed: Value deep equals 'BCDEFGhIj'
// Test Passed: Value deep equals 'bCDEfGHIJKL'
// Test Passed: Value deep equals 'BCDefGhIJ'
// Test Passed: Value deep equals 'BcDeFGHIjKlMNOpqRS'
// Test Passed: Value deep equals 'bcDefGHiJKLMN'
// Test Passed: Value deep equals 'BCdeFgHIjKLMnOP'
// Test Passed: Value deep equals 'bcdEFghIJKLMNo'
// Test Passed: Value deep equals 'bCdEfGHIJK'
// Test Passed: Value deep equals 'BcdeFgHiJKlMNOP'
// Test Passed: Value deep equals 'bcdeFGHiJKlMn'
// Test Passed: Value deep equals 'BCdEfGHIJKLmN'
// Test Passed: Value deep equals 'bcdEFGHIJK'
// Test Passed: Value deep equals 'BCdeFGhiJ'
// Test Passed: Value deep equals 'BCDefghIJkLMNOPQr'
// Test Passed: Value deep equals 'BCDEFGhiJKLMno'
// Test Passed: Value deep equals 'BcDEFgHIjKLMN'
// Test Passed: Value deep equals 'BCDEfGhiJk'
// Test Passed: Value deep equals 'BCDEFGHIjKLMNo'
// Test Passed: Value deep equals 'bCdEfGHijKlM'
// Test Passed: Value deep equals 'bCDEFGHijKLMNo'
// Test Passed: Value deep equals 'BCDEfghIJkLmNoPQR'
// Test Passed: Value deep equals 'bCDeFGHIJKLM'
// Test Passed: Value deep equals 'BcDEfGHIjKLmNOPqRs'
// Test Passed: Value deep equals 'bcDEfgHiJKLmNOPQR'
// Test Passed: Value deep equals 'BCDEFghiJkLmN'
// Test Passed: Value deep equals 'bCDEFgHIJklMN'
// Test Passed: Value deep equals 'BCdEfGHIJK'
// Test Passed: Value deep equals 'BCDEfGHijKLmNoP'
// Test Passed: Value deep equals 'bCDEFGHIjkLMNopq'
// Test Passed: Value deep equals 'BCDEFgHIJKlMNopQ'
// Test Passed: Value deep equals 'BcDEFgHiJkL'
// Test Passed: Value deep equals 'BCDEFgHIJklmNoP'
// Test Passed: Value deep equals 'BCDefGhiJ'
// Test Passed: Value deep equals 'bcdEfGHIJkLMNoPq'
// Test Passed: Value deep equals 'bcDEFGHIJklmnOPQR'
// Test Passed: Value deep equals 'bCdeFGHiJK'
// Test Passed: Value deep equals 'bCDEFgHIjKL'
// Test Passed: Value deep equals 'BcdEFGHijK'
// Test Passed: Value deep equals 'BcDEFGHiJKlMNoPQ'
// Test Passed: Value deep equals 'BcDEFgHIJkLmNOpQRS'
// Test Passed: Value deep equals 'BcDEFgHiJKlMnOpQ'
// Test Passed: Value deep equals 'BCDEfghIJ'
// Test Passed: Value deep equals 'bCdEFGhIJKLmnoP'
// Test Passed: Value deep equals 'BcDEFGHIJkLmNoP'
// Test Passed: Value deep equals 'BCDefghIJkL'
// Test Passed: Value deep equals 'bcDEFGHIJKlmNOP'
// Test Passed: Value deep equals 'bCDEFghiJKLMNOPqR'
// Test Passed: Value deep equals 'BcDEFGHiJKl'
// Test Passed: Value deep equals 'BCDefGHIjKLmN'
// Test Passed: Value deep equals 'bcdEFGHIj'
// Test Passed: Value deep equals 'BCdEFGHiJ'
// Test Passed: Value deep equals 'BCDEFGhIJkl'
// Test Passed: Value deep equals 'bCdeFgHiJKLmNOpQR'
// Test Passed: Value deep equals 'BCDeFGhIJK'
// Test Passed: Value deep equals 'BcdEFGHIjKlMNO'
// Test Passed: Value deep equals 'BcDEFghiJKLm'
// Test Passed: Value deep equals 'BCDEFgHIJklMNOPQRS'
// Test Passed: Value deep equals 'BCdeFGhIJKLMn'
// Test Passed: Value deep equals 'BcdEfGhiJKLMNO'
// Test Passed: Value deep equals 'BCDEFGhIjKLMnoPQr'
// Test Passed: Value deep equals 'bCDEFGHiJ'
// Test Passed: Value deep equals 'BcDEFgHIjkLmNOPQ'
// Test Passed: Value deep equals 'BcDEFGhIJKlMNo'
// Test Passed: Value deep equals 'BCDEFGHIjKLmNOP'
// Test Passed: Value deep equals 'BCdeFgHiJkLMNOPQRs'
// Test Passed: Value deep equals 'bcDEfGHIjKL'
// Test Passed: Value deep equals 'BCDEfGHIJKlMNoPQr'
// Test Passed: Value deep equals 'bcDeFGHIJkLMNoPQR'
// Test Passed: Value deep equals 'bCdEFgHiJKLmn'
// Test Passed: Value deep equals 'BCdEFGhIJkLmNoPQRs'
// Test Passed: Value deep equals 'BCDEfGhIJkLMNOP'
// Test Passed: Value deep equals 'BcDeFGHIJKLmnOP'
// Test Passed: Value deep equals 'BcDefGHIJKLmnOPQrS'
// Test Passed: Value deep equals 'BCdEfGhIJKlMNo'
// Test Passed: Value deep equals 'BCdeFGHIj'
// Test Passed: Value deep equals 'BCdEFGHijKlMNO'
// Test Passed: Value deep equals 'bCDeFGHiJkLmNOpQ'
// Test Passed: Value deep equals 'bCDEfGHIJklMNOPqRs'
// Test Passed: Value deep equals 'BcDefgHIJKLMNOP'
// Test Passed: Value deep equals 'BcdeFGHIJKlMNO'
// Test Passed: Value deep equals 'BCDEFGHIJkLMnoPq'
// Test Passed: Value deep equals 'BCdEFGHIjk'
// Test Passed: Value deep equals 'bcDEFGhIJkLMN'
// Test Passed: Value deep equals 'BCdefGhIJKLmn'
// Test Passed: Value deep equals 'bCDEfGhIJKlM'
// Test Passed: Value deep equals 'BCdEfGhiJKL'
// Test Passed: Value deep equals 'bcdEFGHIJklmNoPQRS'
// Test Passed: Value deep equals 'BCdEFgHIJKlMnOP'
// Test Passed: Value deep equals 'BCDeFGHIJKlMnOPQRs'
// Test Passed: Value deep equals 'BCdEFGhIj'
// Test Passed: Value deep equals 'BCdEfgHIJKlMNO'
// Test Passed: Value deep equals 'bCDEfGhiJK'
// Completed in 15ms
// You have passed all of the tests! :)